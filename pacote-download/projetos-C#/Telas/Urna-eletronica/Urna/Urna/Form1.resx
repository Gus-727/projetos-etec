<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>